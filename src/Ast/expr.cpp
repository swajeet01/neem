/*******************************
*	File generated by ast_generator.py, DO NOT MODIFY!
*******************************/

#include "../Token/token.h"
#include "../Variant/literal.h"
#include "../Visitor/mutable_state_visitor.h"

struct Binary;
struct Grouping;
struct Unary;
struct Ast_literal;
#include "expr.h"

Binary::Binary(std::shared_ptr<Expr> p_left, Token p_op, std::shared_ptr<Expr> p_right):
	left {p_left}, op {p_op}, right {p_right} {}

void Binary::accept(Mutable_state_visitor& visitor) {
	visitor.visit(*this);
}

Grouping::Grouping(std::shared_ptr<Expr> p_expr):
	expr {p_expr} {}

void Grouping::accept(Mutable_state_visitor& visitor) {
	visitor.visit(*this);
}

Unary::Unary(Token p_op, std::shared_ptr<Expr> p_right):
	op {p_op}, right {p_right} {}

void Unary::accept(Mutable_state_visitor& visitor) {
	visitor.visit(*this);
}

Ast_literal::Ast_literal(Literal p_value):
	value {p_value} {}

void Ast_literal::accept(Mutable_state_visitor& visitor) {
	visitor.visit(*this);
}

